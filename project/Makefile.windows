SHELL=cmd.exe
FRONT_END_BINARY=frontApp.exe
BROKER_BINARY=brokerApp.exe

## up: starts all containers in the background without forcing build
up:
	@echo Starting Docker images...
	docker-compose up -d
	@echo Docker images started!

## up_build: stops docker-compose (if running), builds all projects and starts docker compose
up_build: build_broker build_front
	@echo Stopping docker images (if running...)
	docker-compose down
	@echo Building (when required) and starting docker images...
	docker-compose up --build -d
	@echo Docker images built and started!

## down: stop docker compose
down:
	@echo Stopping docker compose...
	docker-compose down
	@echo Done!

## build_broker: builds the broker binary as a Windows executable
build_broker:
	@echo Building broker binary...
	cd ..\broker-service && go build -o ${BROKER_BINARY} ./cmd/api
	@echo Done!

## build_front: builds the front-end binary as a Windows executable
build_front:
	@echo Building front-end binary...
	cd ..\front-end && go build -o ${FRONT_END_BINARY} ./cmd/web
	@echo Done!

## start: starts the front-end binary
start: build_front
	@echo Starting front end...
	cd ..\front-end && start /B ${FRONT_END_BINARY} &
	@echo Front end started!

## stop: stop the front-end binary
stop:
	@echo Stopping front end...
	@taskkill /IM "${FRONT_END_BINARY}" /F
	@echo Front end stopped!
